/**
 * @author: Kapil Kashyap
 */
let row,column,prevDirection,interval,timerInterval,scoreInterval,flickerInterval,coordinates,selectedCoordinates,speed,northThreshold,westThreshold,eastThreshold,southThreshold,startX,startY,endX,endY,deltaX,deltaY,startTime,elapsedTime,swipeDirection,swipeAngle,swipeAngleMinThreshold,swipeAngleMaxThreshold,gameState,levelUpPeriod,maxLevel,gameProgressFactor,snakeLength=3,snakeLife=3,defaultDirection="north",direction=defaultDirection,prevSnakeLength=0,nodes=[],removeNodes=[],meals=[],dangers=[],baseTime=440,speedCutOff=40,classicModeBaseTime=340,classicModeSpeedCutOff=100,mazeModeSpeedCutOff=152,reduction=40,baseThresholds=[],availableModes=["classic","challenge","maze"],unlockedModes=["classic","challenge","maze"],selectedMode="classic",isGesture=!1,thresholdPassed=!1,swipeThreshold=25,defaultSwipeAngleMinThreshold=27,defaultSwipeAngleMaxThreshold=63,allowedTime=300,movesQueue=[],mazePathTraversed=0,gameProgressBar=document.querySelector(".game-indicator .progress-bar"),level=1,levelNode=document.querySelector(".level>.value"),score=0,scoreNode=document.querySelector(".score>.value"),time=0,timerNode=document.querySelector(".time>.value"),isPortableMode=function(){return!!/Android|webOS|iPhone|iPad|iPod|Opera Mini/i.test(navigator.userAgent)&&(document.body.style.zoom="200%",!0)}(),messages={START:isPortableMode?"Press play button to start.":"Press space bar to start.",RESET:isPortableMode?"Press reset button.":"Press 'R' to reset.",PAUSE:isPortableMode?"":"Press space bar to pause.",RESUME:isPortableMode?"Press play button to resume.":"Press space bar to resume.",LIVES_REMAINING:"lives remaining!",LIFE_REMAINING:"life remaining!",GAME_OVER:"Game over!",CONGRATULATIONS:"Congratulations",LEVEL_UNLOCKED:"level unlocked!",AMAZING:"Amazing",ALL_LEVELS_COMPLETED:"all levels completed!",TOP_3_SCORES:"Your top 3 scores will appear here...",PLAY_BUTTON_LABEL:"Play",PAUSE_BUTTON_LABEL:"Pause",DISCLAIMER:"Works best on desktop.",COMMA:", ",SPACE:" "};var setupArena=function(){let a=document.querySelector(".game-arena-display"),b=a.getBoundingClientRect(),d=a.querySelector("div"),e=getDimension(d),f=document.createElement("DIV"),g=null,h=1,i=1,j=Math.floor(b.height/e.height),k=Math.floor(b.width/e.width);baseThresholds=[0,k],d.remove();for(let b=0;b<k*j;b++)i=b%k+1,b>=k&&1===i&&h++,g=f.cloneNode(),g.setAttribute("data",[h,i]),g.setAttribute("class","empty rc_"+h+"_"+i),a.appendChild(g);updateGameArenaThresholds(baseThresholds),setSpeed(),levelUpPeriod=calculateLevelUpPeriod(),updateMessage(messages.START),registerKeys()},registerKeys=function(){isPortableMode?(document.querySelector(".game-actions").classList.remove("hide"),updateActionButtonLabel(),document.querySelector(".tutorial div").addEventListener("touchstart",function(a){a.stopPropagation(),a.preventDefault(),document.querySelector(".tutorial-overlay").classList.remove("hide"),document.querySelector(".image-container img:nth-child(1)").classList.remove("hidden"),document.querySelector(".image-selection .indicator:nth-child(1)").style.background="#888"},{passive:!1}),document.querySelectorAll(".image-container img").forEach(function(a){let b=document.querySelector(".image-selection");a.addEventListener("touchstart",function(a){a.stopPropagation(),a.preventDefault();let c=+this.id;this.classList.add("hidden"),b.querySelector(".indicator:nth-child("+c+")").style.background="",b.querySelector(".indicator:nth-child("+(4==c?1:c+1)+")").style.background="#888",this.nextElementSibling?this.nextElementSibling.classList.remove("hidden"):document.querySelector(".image-container img").classList.remove("hidden")},{passive:!1})}),document.querySelector(".tutorial-overlay").addEventListener("touchstart",function(a){a.stopPropagation(),a.preventDefault(),document.querySelectorAll(".image-container img").forEach(function(a){a.classList.add("hidden")}),document.querySelectorAll(".image-selection .indicator").forEach(function(a){a.style.background=""}),this.classList.add("hide")},{passive:!1}),document.querySelector(".body-container").addEventListener("touchstart",function(a){let b=a.changedTouches[0];startX=b.pageX,startY=b.pageY,startTime=new Date().getTime(),isGesture=!0,thresholdPassed=!1,a.preventDefault()},{passive:!1}),document.querySelector(".body-container").addEventListener("touchend",function(a){if(isGesture){let b=a.changedTouches[0];endX=b.pageX,endY=b.pageY,deltaX=endX-startX,deltaY=endY-startY,elapsedTime=new Date().getTime()-startTime,swipeAngle=Math.abs(Math.atan(deltaY/deltaX)*(180/Math.PI)),thresholdPassed=Math.abs(deltaX)>swipeThreshold&&Math.abs(deltaY)>swipeThreshold,elapsedTime<=allowedTime&&(0<deltaX&&0>deltaY?swipeAngle<swipeAngleMinThreshold?swipeDirection=["east"]:swipeAngle>swipeAngleMaxThreshold?swipeDirection=["north"]:thresholdPassed&&(swipeDirection=["east","north"]):0>deltaX&&0>deltaY?swipeAngle<swipeAngleMinThreshold?swipeDirection=["west"]:swipeAngle>swipeAngleMaxThreshold?swipeDirection=["north"]:thresholdPassed&&(swipeDirection=["west","north"]):0>deltaX&&0<deltaY?swipeAngle<swipeAngleMinThreshold?swipeDirection=["west"]:swipeAngle>swipeAngleMaxThreshold?swipeDirection=["south"]:thresholdPassed&&(swipeDirection=["west","south"]):0<deltaX&&0<deltaY&&(swipeAngle<swipeAngleMinThreshold?swipeDirection=["east"]:swipeAngle>swipeAngleMaxThreshold?swipeDirection=["south"]:thresholdPassed&&(swipeDirection=["east","south"])),handleGesture(swipeDirection)),isGesture=!1}a.preventDefault()},{passive:!1})):(document.querySelectorAll(".life .value span").forEach(function(a){a.innerHTML="&#9829;"}),document.querySelector(".instructions .tutorial").classList.add("hide"),document.querySelector(".game-actions").classList.add("hide"),document.addEventListener("keydown",function(a){a.stopPropagation(),a.preventDefault(),38===a.keyCode||87===a.keyCode?handleDirectionChange("north"):39===a.keyCode||68===a.keyCode?handleDirectionChange("east"):40===a.keyCode||83===a.keyCode?handleDirectionChange("south"):37===a.keyCode||65===a.keyCode?handleDirectionChange("west"):32===a.keyCode&&("stopped"===gameState||gameState===void 0)?playEventHandler():32===a.keyCode&&"over"!==gameState?pauseEventHandler():82===a.keyCode&&interval===void 0&&resetEventHandler()})),document.querySelector(".game-actions .play-pause").addEventListener("touchstart",function(a){a.stopPropagation(),a.preventDefault(),disableResetButton(),"stopped"===gameState||gameState===void 0?playEventHandler():"over"!==gameState&&pauseEventHandler()},{passive:!1}),document.querySelector(".game-actions .reset").addEventListener("touchstart",function(a){a.stopPropagation(),a.preventDefault();this.querySelector("button").disabled||interval===void 0&&resetEventHandler()},{passive:!1}),window.addEventListener("blur",function(){"play"===gameState&&pauseEventHandler()},{passive:!1})},handleGesture=function(a){if(a)if(2===a.length){let b="east"===direction||"west"===direction;movesQueue.unshift(a[b?1:0]),movesQueue.unshift(a[b?0:1])}else handleDirectionChange(a[0])},handleDirectionChange=function(a){"play"===gameState&&movesQueue[0]!==a&&("north"===a&&"south"!==movesQueue[0]&&"south"!==direction?movesQueue.unshift(a):"east"===a&&"west"!==movesQueue[0]&&"west"!==direction?movesQueue.unshift(a):"south"===a&&"north"!==movesQueue[0]&&"north"!==direction?movesQueue.unshift(a):"west"==a&&"east"!==movesQueue[0]&&"east"!==direction&&movesQueue.unshift(a))},playEventHandler=function(){updateRowColumnDirection(),updateLevel(+retrieveItem("selected"+capitalize(selectedMode)+"Level")||1),setSpeed(),setSpeedInterval(),setTimer(),setScorer(),gameState===void 0&&(updateLife(!0),generateFood()),setSnakeLength(),setGameState("play"),updateMessage(messages.PAUSE),hideInstructions(),isPortableMode&&updateActionButtonLabel(messages.PAUSE_BUTTON_LABEL)},pauseEventHandler=function(){"paused"!==gameState&&"lifeLost"!==gameState?(interval=clearInterval(interval),timerInterval=clearInterval(timerInterval),scoreInterval=clearInterval(scoreInterval),flickerInterval=clearInterval(flickerInterval),setGameState("paused"),updateMessage(messages.RESUME),isPortableMode&&(updateActionButtonLabel(messages.PLAY_BUTTON_LABEL),disableResetButton(!1))):("paused"===gameState||"lifeLost"===gameState)&&("lifeLost"===gameState&&(!isMazeMode()&&clearNodes(),defaultSettings(),generateFood()),setSpeedInterval(),setTimer(),setScorer(),setGameState("play"),updateMessage(messages.PAUSE),isPortableMode&&(updateActionButtonLabel(messages.PAUSE_BUTTON_LABEL),disableResetButton()))},resetEventHandler=function(){setGameState("over"),clearNodes(),updateLife(),defaultSettings(),updateMessage(messages.START),hideInstructions(!1),resetGameProgress(),isPortableMode&&(toggleHide("play-pause"),updateActionButtonLabel(messages.PLAY_BUTTON_LABEL),disableResetButton())},defaultSettings=function(){updateRowColumnDirection(),interval=void 0,flickerInterval=clearInterval(flickerInterval),meals=[],"over"===gameState?(setGameState(),snakeLife=3,setSnakeLength(),score=0,scoreNode.innerText=score,time=0,timerNode.innerText="0s",setSpeed()):!isMazeMode()&&prevSnakeLength<nodes.length+removeNodes.length&&setSnakeLength(nodes.length+removeNodes.length),document.querySelectorAll(".flicker").forEach(function(a){removeEntityFromNode(a,"flicker")}),document.querySelectorAll(".food").forEach(function(a){removeEntityFromNode(a,"food")})},setDirection=function(a){direction=a||defaultDirection},setGameState=function(a){gameState=a},applySnakeBodyCurve=function(a){if(a===prevDirection)return;let b=null;"north"===a?b="east"===prevDirection?"se":"west"===prevDirection?"sw":null:"east"===a?b="south"===prevDirection?"sw":"north"===prevDirection?"nw":null:"south"===a?b="east"===prevDirection?"ne":"west"===prevDirection?"nw":null:"west"==a&&(b="south"===prevDirection?"se":"north"===prevDirection?"ne":null),b&&addEntity([row,column],b)},setSpeedInterval=function(){interval=clearInterval(interval),interval=setInterval(function(){0<movesQueue.length&&(prevDirection=direction,setDirection(movesQueue.pop()),applySnakeBodyCurve(direction)),moveSnake()},speed)},setTimer=function(){timerInterval=setInterval(function(){timerNode.innerText=(time+=.1).toFixed(1)+"s"},100)},setScorer=function(){scoreInterval=setInterval(function(){score+=level*snakeLife,scoreNode.innerText=score},100)},capitalize=function(a){return a[0].toUpperCase()+a.slice(1)},getDimension=function(a){let b=getComputedStyle(a),c=parseInt(b.marginLeft)+parseInt(b.marginRight)+parseInt(b.borderLeftWidth)+parseInt(b.borderRightWidth)+parseInt(b.paddingLeft)+parseInt(b.paddingRight)+parseInt(b.width),d=parseInt(b.marginTop)+parseInt(b.marginBottom)+parseInt(b.borderTopWidth)+parseInt(b.borderBottomWidth)+parseInt(b.paddingTop)+parseInt(b.paddingBottom)+parseInt(b.height);return{width:c,height:d}},isClassicMode=function(){return"classic"===selectedMode},isChallengeMode=function(){return"challenge"===selectedMode},isMazeMode=function(){return"maze"===selectedMode},setSnakeLength=function(a){snakeLength=a||getDefaultSnakeLength(),prevSnakeLength=snakeLength},getDefaultSnakeLength=function(){return isClassicMode()?1===level?3:levelUpPeriod*(level-1):10+level},updateScore=function(a){score+=(a||10)*level},addLife=function(){document.querySelector("span:nth-of-type("+ ++snakeLife+")").classList.add("available")},loseLife=function(){document.querySelector("span.available:nth-of-type("+snakeLife--+")").classList.remove("available")},updateLife=function(a){document.querySelectorAll("span").forEach(function(b){b.classList[a?"add":"remove"]("available")})},updateMessage=function(a){document.querySelector("div.message").innerHTML=a||""},updateActionButtonLabel=function(a){document.querySelector(".button.play-pause button").innerHTML=a||messages.PLAY_BUTTON_LABEL},updateSwipeAngleThresholds=function(){swipeAngleMinThreshold=isMazeMode()?45:defaultSwipeAngleMinThreshold,swipeAngleMaxThreshold=isMazeMode()?45:defaultSwipeAngleMaxThreshold},disableResetButton=function(a){a=!(a!==void 0),document.querySelector(".button.reset button").disabled=a},toggleHide=function(a,b){document.querySelector(".button."+a).classList[b?"add":"remove"]("hide")},setSpeed=function(){speed=calculateSpeed()},calculateSpeed=function(a){return a=a||level,isChallengeMode()?classicModeBaseTime-(reduction-20)*a:isMazeMode()?baseTime-(reduction-16)*a:baseTime-reduction*a+(9<=a?reduction/2*(a-8):0)},calculateLevelUpPeriod=function(){return Math.round(Math.cbrt(southThreshold*eastThreshold))},updateLevel=function(a){level=a,levelNode.innerText=a},calculateMaxLevels=function(){let a,b=1;for(;;b++)if(a=calculateSpeed(b),isChallengeMode()&&a===classicModeSpeedCutOff)break;else if(isMazeMode()&&a===mazeModeSpeedCutOff)break;else if(isClassicMode()&&a===speedCutOff)break;maxLevel=b},setGameProgressFactor=function(){let a=100;if(isClassicMode())gameProgressFactor=100/(maxLevel*levelUpPeriod);else if(isChallengeMode()){let b=predefinedThresholdsForChallengeMode();gameProgressFactor=a/Math.pow(b[1]-b[0],2)}else if(isMazeMode()){let b=document.querySelectorAll(".maze-path").length;gameProgressFactor=a/b}},clearNodes=function(){nodes.concat(removeNodes).forEach(function(a){removePath(a)}),setTimeout(function(){nodes=[],removeNodes=[]},0)},setRowColumnDirection=function(){row=southThreshold,column=westThreshold,setDirection(defaultDirection),movesQueue=[]},updateRowColumnDirection=function(){if(isMazeMode()){let a,b;a="lifeLost"===gameState?document.querySelector(".maze-path.head"):document.querySelector(".maze-path.begin"),b=a.getAttribute("data").split(","),row=+b[0],column=+b[1],setDirection(a.getAttribute("direction")),"north"===direction?row++:"south"===direction?row--:"east"===direction?column--:"west"===direction&&column++}else setRowColumnDirection()},hideInstructions=function(a){a=!(a!==void 0)||a,document.querySelector(".instructions").classList.remove("show","hide"),document.querySelector(".instructions").classList.add(a?"hide":"show"),a||updateModeLevels()},nodeSelection=function(a){return a&&document.querySelector(".rc_"+a[0]+"_"+a[1])},addEntity=function(a,b){let c=nodeSelection(a);c&&(c.classList.add(b),c.classList.remove("empty"))},removeEntityFromNode=function(a,b){a&&(a.classList.remove(b),a.classList.add("empty"))},removeEntity=function(a,b){nodeSelection(a);removeEntityFromNode(nodeSelection(a),b)},removePath=function(a){if(a!==void 0){let b=nodeSelection(a);b&&(b.classList.remove("path","head","body","tail","nw","ne","se","sw","nw-ne","ne-se","se-sw","sw-nw"),b.classList.add("empty"))}},addPath=function(){for(let a,b=0;b<nodes.length;b++)if(a=nodeSelection(nodes[b]),a&&(a.classList.remove("empty","head","body","nw-ne","ne-se","se-sw","sw-nw"),a.classList.add("path",b==nodes.length-1?"head":"body"),0==b&&a.classList.add("tail"),b==nodes.length-1)){let b="";"north"===direction?b="nw-ne":"east"===direction?b="ne-se":"south"===direction?b="se-sw":"west"===direction&&(b="sw-nw"),a.classList.add(b)}},onValidPath=function(a,b){let c=nodeSelection(a);return!!c&&(isMazeMode()?c.classList.contains(b):!c.classList.contains(b))},onValidMazePath=function(a){let b=nodeSelection(a);return!(b&&isMazeMode())||b.classList.contains("maze-path")},persistItem=function(a,b){localStorage.setItem(a,b)},retrieveItem=function(a){return localStorage.getItem(a)},generateFood=function(){if(!isMazeMode()){var a=document.querySelectorAll(".game-arena-display div.empty:not(.head)");if(0<a.length){let b=a[Math.floor(Math.random()*a.length)],c=b.getAttribute("data").split(","),d=[+c[0],+c[1]];meals.push(d.toString()),addEntity(d,"food")}}},induceFlickerEffect=function(a){a=a||6;let b=document.querySelectorAll(".path");flickerInterval=setInterval(function(){return-1===a?void(flickerInterval=clearInterval(flickerInterval)):void(b.forEach(function(b){b.classList[0==a%2?"add":"remove"]("flicker")}),a--)},200)},inducePause=function(a){"paused"!==gameState&&(interval=clearInterval(interval),setGameState("paused"));let b=setInterval(function(){setSpeedInterval(),setGameState("play"),b=clearInterval(b)},a||1500)},checkGameOver=function(){return isClassicMode()&&speed<speedCutOff?(level--,gameOver(10,"Well done! :)",!0),document.querySelectorAll(".food").forEach(function(a){removeEntityFromNode(a,"food")}),!0):!!isChallengeMode()&&0===document.querySelectorAll(".game-arena-display div.empty:not(.head)").length},saveGameStats=function(){time=time.toFixed(1);let a=retrieveItem("snake-game-stats"),b=+retrieveItem("unlocked"+capitalize(selectedMode)+"Levels")||1,c={timestamp:new Date().getTime(),level:level,score:score,time:time,selectedMode:selectedMode};if(null!==a){a=JSON.parse(a);let b=a.findIndex(function(a){return a.score<score});-1===b?a.push(c):a.splice(b,0,c),persistItem("snake-game-stats",JSON.stringify(a))}else persistItem("snake-game-stats",JSON.stringify([c]));level>b&&persistItem("unlocked"+capitalize(selectedMode)+"Levels",level),updateLeaderboard()},randomMazeCoordinatesSelector=function(){return selectedCoordinates=coordinates[Math.floor(12*Math.random())],selectedCoordinates},mazeCoordinatesSelector=function(){let a=+retrieveItem("selected"+capitalize(selectedMode)+"Level")||1;return selectedCoordinates=coordinates[a-1],selectedCoordinates},clearMazeModeUI=function(){document.querySelectorAll(".maze-mode .maze-path").forEach(function(a){a.removeAttribute("direction"),a.classList.remove("maze-path","north","south","east","west","begin","end")}),document.querySelector(".game-arena-display").classList.remove("maze-mode")},generateMazePath=function(a){clearMazeModeUI(),document.querySelector(".game-arena-display").classList.add("maze-mode"),a=a||36,mazeCoordinatesSelector();let b,c,d,e,f,g,h,j,k,l=Math.sqrt(selectedCoordinates.length),m=a/l,n="maze-path",o=selectedCoordinates.length,p=function(a){return(a+1)*m-1};selectedCoordinates.forEach(function(a,i){if(c="",g=p(a[0]),h=p(a[1]),e=nodeSelection([g,h]),b){b[0]>a[0]?c="north":b[0]<a[0]&&(c="south"),b[1]>a[1]?c="west":b[1]<a[1]&&(c="east"),j=p(b[0]),k=p(b[1]);for(let a=1;a<m;a++)"north"===c?j--:"south"===c?j++:"east"===c?k++:"west"===c&&k--,f=nodeSelection([j,k]),f.classList.add(n,c),f.setAttribute("direction",c);d.classList.add(n),e.classList.add(n,c),d.setAttribute("direction",c),1===i&&d.classList.add(c)}else e.classList.add(n,"begin");o===i+1&&e.classList.add("end",n),b=a,d=e})},predefinedThresholdsForChallengeMode=function(){let a=+retrieveItem("selected"+capitalize(selectedMode)+"Level")||1;if(3>=a)return[9,27];return 3<a&&6>=a?[6,30]:6<a&&9>=a?[3,33]:[0,36]},updateGameArenaThresholds=function(a){northThreshold=a[0]+1,westThreshold=a[0]+1,eastThreshold=a[1],southThreshold=a[1],setRowColumnDirection()},updateChallengeModeUI=function(a){a=a||predefinedThresholdsForChallengeMode(),clearChallengeModeUI(),updateGameArenaThresholds(a),document.querySelectorAll(".empty").forEach(function(b){let c=b.getAttribute("data").split(",");(+c[0]<=a[0]||+c[0]>a[1]||+c[1]<=a[0]||+c[1]>a[1])&&(b.classList.remove("empty"),b.classList.add("danger"))})},clearChallengeModeUI=function(){updateGameArenaThresholds(baseThresholds),document.querySelectorAll(".danger").forEach(function(a){a.classList.remove("danger"),a.classList.add("empty")})},modeSelectionEventHandler=function(a){a.stopPropagation(),document.querySelector(".modes div.selected").classList.remove("selected"),this.classList.add("selected"),selectedMode=this.getAttribute("data"),persistItem("selectedMode",selectedMode),calculateMaxLevels(),clearModeLevels(),addModeLevels(),updateModeLevels(),displayModeInstructions(),isMazeMode()?generateMazePath():clearMazeModeUI(),isChallengeMode()?updateChallengeModeUI():clearChallengeModeUI(),setSnakeLength(),updateLeaderboard(),setGameProgressFactor(),resetGameProgress(),updateSwipeAngleThresholds()},levelSelectionEventHandler=function(a){a.stopPropagation(),document.querySelector(".levels div.selected").classList.remove("selected"),this.classList.add("selected"),persistItem("selected"+capitalize(selectedMode)+"Level",+this.getAttribute("data")),isMazeMode()&&generateMazePath(),isChallengeMode()&&updateChallengeModeUI(),setSnakeLength()},addAvailableModes=function(){let a,b=document.querySelector(".selectMode .modes"),c=document.createElement("DIV");availableModes.forEach(function(d){a=c.cloneNode(),a.setAttribute("data",d),a.setAttribute("class","mode"),a.innerText=d,b.appendChild(a)})},updateModes=function(){let a=JSON.parse(retrieveItem("unlockedModes"))||[selectedMode];selectedMode=retrieveItem("selectedMode")||selectedMode,document.querySelectorAll(".selectMode .modes .mode").forEach(function(b){let c=b.getAttribute("data");b.removeEventListener(isPortableMode?"touchstart":"click",modeSelectionEventHandler),b.classList.remove("selected","enabled","disabled"),b.addEventListener(isPortableMode?"touchstart":"click",modeSelectionEventHandler),c===selectedMode?b.classList.add("enabled","selected"):-1===a.indexOf(c.toLowerCase())?(b.classList.add("disabled"),b.removeEventListener(isPortableMode?"touchstart":"click",modeSelectionEventHandler)):b.classList.add("enabled")}),isMazeMode()?generateMazePath():isChallengeMode()&&updateChallengeModeUI()},clearModeLevels=function(){document.querySelectorAll(".selectLevel .levels .level").forEach(function(a){a.remove()})},addModeLevels=function(){let a,b=document.querySelector(".selectLevel .levels"),c=document.createElement("DIV");for(let d=1;d<=maxLevel;d++)a=c.cloneNode(),a.setAttribute("data",d),a.setAttribute("class","level"),a.innerText=d,b.appendChild(a)},updateModeLevels=function(){let a=+retrieveItem("selected"+capitalize(selectedMode)+"Level")||1,b=+retrieveItem("unlocked"+capitalize(selectedMode)+"Levels")||1;document.querySelectorAll(".selectLevel .levels .level").forEach(function(c,d){c.removeEventListener(isPortableMode?"touchstart":"click",levelSelectionEventHandler),c.classList.remove("selected","enabled","disabled"),c.addEventListener(isPortableMode?"touchstart":"click",levelSelectionEventHandler),a===d+1?c.classList.add("enabled","selected"):b<d+1?(c.classList.add("disabled"),c.removeEventListener(isPortableMode?"touchstart":"click",levelSelectionEventHandler)):c.classList.add("enabled")})},displayModeInstructions=function(){document.querySelectorAll(".instructions .details ol").forEach(function(a){a.classList.contains(selectedMode+"-mode")?(a.classList.add("show"),a.classList.remove("hide")):(a.classList.remove("show"),!a.classList.contains("hide")&&a.classList.add("hide"))})},updateLeaderboard=function(a){a=a||3;let b=document.querySelector(".leaderboard"),c=JSON.parse(retrieveItem("snake-game-stats"));if(null!==c&&(c=c.filter(function(a){return a.selectedMode===selectedMode})),c&&0<c.length){let d=Object.keys(c[0]),e="<div class='row'>";e+="<div class='padded'></div>",e+="<div class='column head'>S.No</div>",d.forEach(function(a){"timestamp"!==a&&(e+="<div class='column head'>"+a+"</div>")}),e+="<div class='padded'></div>",e+="</div>";for(let b,f=0;f<a;f++)b=c[f],b&&(e+="<div class='row'>",e+="<div class='padded'></div>",e+="<div class='column'>"+(f+1)+".</div>",d.forEach(function(a){"timestamp"!==a&&(e+="<div class='column'>"+b[a]+"</div>")}),e+="<div class='padded'></div>",e+="</div>");b.innerHTML=e}else b.innerHTML="<div class='message'>"+messages.TOP_3_SCORES+"</div>"},gameOver=function(a,b,c){if(c=void 0!==c&&c,interval=clearInterval(interval),timerInterval=clearInterval(timerInterval),scoreInterval=clearInterval(scoreInterval),induceFlickerEffect(a),isMazeMode()&&document.querySelector(".maze-mode .head").classList.contains("end")){let a=+retrieveItem("selected"+capitalize(selectedMode)+"Level")||1,d=+retrieveItem("unlocked"+capitalize(selectedMode)+"Levels")||1;c=!0,a===d&&a<maxLevel?(b=messages.CONGRATULATIONS+messages.COMMA+messages.LEVEL_UNLOCKED+messages.SPACE+messages.RESET,level++):a<d?b=messages.CONGRATULATIONS+messages.SPACE+messages.RESET:b=messages.AMAZING+messages.COMMA+messages.ALL_LEVELS_COMPLETED+messages.SPACE+messages.RESET,saveGameStats()}!c&&1<snakeLife?(loseLife(),setGameState("lifeLost"),updateMessage(snakeLife+messages.SPACE+(1===snakeLife?messages.LIFE_REMAINING:messages.LIVES_REMAINING)+messages.SPACE+messages.RESUME),updateActionButtonLabel(messages.PLAY_BUTTON_LABEL)):(setGameState("over"),updateLife(),updateMessage(b||messages.GAME_OVER+messages.SPACE+messages.RESET),isPortableMode&&toggleHide("play-pause",!0),!isMazeMode()&&saveGameStats()),isPortableMode&&disableResetButton(!1)},moveSnake=function(){let a=isMazeMode()?"maze-path":"body";"north"===direction?nodes.length<snakeLength?(row>northThreshold&&onValidMazePath([row-1,column])?0<nodes.length?nodes.push([--row,column]):(row-=row===southThreshold?0:1,nodes.push([row,column])):gameOver(7),onValidPath([row,column],a)?(removePath(removeNodes.shift()),addPath()):gameOver(7)):(removeNodes.push(nodes.shift()),row>northThreshold&&onValidPath([row-1,column],a)?(nodes.push([--row,column]),onValidPath([row,column],a)?(removePath(removeNodes.shift()),addPath()):gameOver(7)):gameOver(7)):"south"===direction?nodes.length<snakeLength?(row<southThreshold&&onValidMazePath([row+1,column])?0<nodes.length?nodes.push([++row,column]):(row+=row===southThreshold?0:1,nodes.push([row,column])):gameOver(7),onValidPath([row,column],a)?(removePath(removeNodes.shift()),addPath()):gameOver(7)):(removeNodes.push(nodes.shift()),row<southThreshold&&onValidPath([row+1,column],a)?(nodes.push([++row,column]),onValidPath([row,column],a)?(removePath(removeNodes.shift()),addPath()):gameOver(7)):gameOver(7)):"east"===direction?nodes.length<snakeLength?(column<eastThreshold&&onValidMazePath([row,column+1])?0<nodes.length?nodes.push([row,++column]):(column+=1<column?1:0,nodes.push([row,column])):gameOver(7),onValidPath([row,column],a)?(removePath(removeNodes.shift()),addPath()):gameOver(7)):(removeNodes.push(nodes.shift()),column<eastThreshold&&onValidPath([row,column+1],a)?(nodes.push([row,++column]),onValidPath([row,column],a)?(removePath(removeNodes.shift()),addPath()):gameOver(7)):gameOver(7)):"west"===direction&&(nodes.length<snakeLength?(column>westThreshold&&onValidMazePath([row,column-1])?0<nodes.length?nodes.push([row,--column]):(column-=1<column?1:0,nodes.push([row,column])):gameOver(7),onValidPath([row,column],a)?(removePath(removeNodes.shift()),addPath()):gameOver(7)):(removeNodes.push(nodes.shift()),column>westThreshold&&onValidPath([row,column-1],a)?(nodes.push([row,--column]),onValidPath([row,column],a)?(removePath(removeNodes.shift()),addPath()):gameOver(7)):gameOver(7))),updateGameStatus(),updateGameProgress(),isMazeMode()&&mazePathTraversed++},triggerLevelUp=function(){let a=document.querySelector(".level .value"),b=1.9;levelUpInterval=setInterval(function(){b+=.1,a.style.background="repeating-radial-gradient(orange, transparent "+b+"px)",15<b&&(a.style.background="",clearInterval(levelUpInterval))},20)},updateGameStatus=function(){let a,b,c=[row,column];return(a=meals.indexOf(c.toString()),-1!==a)?(meals.splice(a,1),removeEntity(c,"food"),updateScore(),generateFood(),snakeLength+=isChallengeMode()?5:1,void(isClassicMode()&&0==snakeLength%levelUpPeriod?(levelNode.innerText=++level,setSpeed(),checkGameOver(speed)?levelNode.innerText=level:(inducePause(100),triggerLevelUp())):isChallengeMode()&&checkGameOver())):(b=dangers.indexOf(c.toString()),-1!==b)?(loseLife(),dangers.splice(b,1),removeEntity(c,"danger"),induceFlickerEffect(),inducePause(),void(0===snakeLife&&gameOver())):void 0},updateGameProgress=function(){return gameProgressBar.style.borderColor="green",isClassicMode()&&3<snakeLength?void(gameProgressBar.style.width=gameProgressFactor*snakeLength+"%"):isChallengeMode()?void(gameProgressBar.style.width=gameProgressFactor*snakeLength+"%"):isMazeMode()?void(gameProgressBar.style.width=gameProgressFactor*mazePathTraversed+"%"):void 0},resetGameProgress=function(){gameProgressBar.style.width=0,gameProgressBar.style.borderColor="transparent",isMazeMode()&&(mazePathTraversed=0)},init=function(){persistItem("unlockedModes",JSON.stringify(unlockedModes)),selectedMode=retrieveItem("selectedMode")||selectedMode,updateLevel(+retrieveItem("selected"+capitalize(selectedMode)+"Level")||1),calculateMaxLevels(),setSnakeLength(),setupArena(),addAvailableModes(),updateModes(),addModeLevels(),updateModeLevels(),displayModeInstructions(),updateLeaderboard(),updateSwipeAngleThresholds(),setGameProgressFactor()};coordinates=[[[1,7],[2,7],[2,8],[2,9],[3,9],[3,10],[4,10],[4,9],[4,8],[3,8],[3,7],[3,6],[4,6],[4,7],[5,7],[5,8],[5,9],[5,10],[5,11],[6,11],[7,11],[8,11],[9,11],[9,10],[10,10],[10,11],[11,11],[11,10],[11,9],[10,9],[9,9],[9,8],[8,8],[8,7],[8,6],[7,6],[7,7],[7,8],[7,9],[8,9],[8,10],[7,10],[6,10],[6,9],[6,8],[6,7],[6,6],[5,6],[5,5],[6,5],[6,4],[6,3],[7,3],[8,3],[8,4],[7,4],[7,5],[8,5],[9,5],[9,6],[9,7],[10,7],[10,8],[11,8],[11,7],[11,6],[10,6],[10,5],[11,5],[11,4],[10,4],[9,4],[9,3],[10,3],[11,3],[11,2],[10,2],[9,2],[9,1],[10,1],[11,1],[11,0],[10,0],[9,0],[8,0],[7,0],[7,1],[8,1],[8,2],[7,2],[6,2],[6,1],[6,0],[5,0],[4,0],[3,0],[3,1],[4,1],[5,1],[5,2],[4,2],[3,2],[2,2],[1,2],[1,1],[2,1],[2,0],[1,0],[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[1,5],[1,4],[1,3],[2,3],[2,4],[3,4],[3,3],[4,3],[5,3],[5,4],[4,4],[4,5],[3,5],[2,5],[2,6],[1,6],[0,6],[0,7],[0,8],[1,8],[1,9],[0,9],[0,10],[0,11],[1,11],[1,10],[2,10],[2,11],[3,11],[4,11]],[[9,1],[10,1],[10,2],[11,2],[11,1],[11,0],[10,0],[9,0],[8,0],[7,0],[6,0],[5,0],[5,1],[6,1],[6,2],[5,2],[4,2],[4,3],[3,3],[3,2],[3,1],[4,1],[4,0],[3,0],[2,0],[2,1],[1,1],[1,0],[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[1,6],[1,7],[0,7],[0,8],[0,9],[1,9],[1,8],[2,8],[2,9],[2,10],[1,10],[0,10],[0,11],[1,11],[2,11],[3,11],[3,10],[4,10],[4,11],[5,11],[5,10],[6,10],[6,11],[7,11],[8,11],[9,11],[9,10],[9,9],[8,9],[8,10],[7,10],[7,9],[6,9],[5,9],[5,8],[6,8],[7,8],[7,7],[6,7],[5,7],[5,6],[5,5],[4,5],[4,6],[4,7],[4,8],[4,9],[3,9],[3,8],[3,7],[2,7],[2,6],[3,6],[3,5],[2,5],[1,5],[1,4],[1,3],[1,2],[2,2],[2,3],[2,4],[3,4],[4,4],[5,4],[5,3],[6,3],[6,4],[6,5],[6,6],[7,6],[7,5],[7,4],[8,4],[8,3],[7,3],[7,2],[7,1],[8,1],[8,2],[9,2],[9,3],[10,3],[11,3],[11,4],[11,5],[10,5],[10,4],[9,4],[9,5],[8,5],[8,6],[8,7],[8,8],[9,8],[10,8],[10,9],[10,10],[10,11],[11,11],[11,10],[11,9],[11,8],[11,7],[11,6],[10,6],[10,7],[9,7],[9,6]],[[1,11],[0,11],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[0,3],[0,2],[0,1],[0,0],[1,0],[2,0],[3,0],[3,1],[4,1],[4,0],[5,0],[5,1],[5,2],[4,2],[3,2],[2,2],[2,1],[1,1],[1,2],[1,3],[2,3],[3,3],[4,3],[5,3],[5,4],[5,5],[5,6],[6,6],[6,5],[7,5],[8,5],[8,4],[7,4],[6,4],[6,3],[6,2],[7,2],[7,3],[8,3],[8,2],[9,2],[10,2],[10,1],[9,1],[8,1],[7,1],[6,1],[6,0],[7,0],[8,0],[9,0],[10,0],[11,0],[11,1],[11,2],[11,3],[11,4],[11,5],[10,5],[10,4],[10,3],[9,3],[9,4],[9,5],[9,6],[9,7],[8,7],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[10,8],[10,7],[10,6],[11,6],[11,7],[11,8],[11,9],[10,9],[10,10],[11,10],[11,11],[10,11],[9,11],[9,10],[9,9],[8,9],[8,10],[8,11],[7,11],[6,11],[5,11],[4,11],[3,11],[2,11],[2,10],[1,10],[1,9],[1,8],[1,7],[1,6],[1,5],[1,4],[2,4],[2,5],[2,6],[2,7],[3,7],[3,8],[2,8],[2,9],[3,9],[3,10],[4,10],[4,9],[4,8],[5,8],[5,9],[5,10],[6,10],[7,10],[7,9],[6,9],[6,8],[6,7],[5,7],[4,7],[4,6],[3,6],[3,5],[4,5],[4,4],[3,4]],[[5,1],[6,1],[7,1],[8,1],[8,2],[9,2],[9,1],[9,0],[8,0],[7,0],[6,0],[5,0],[4,0],[3,0],[2,0],[2,1],[1,1],[1,0],[0,0],[0,1],[0,2],[1,2],[1,3],[0,3],[0,4],[1,4],[1,5],[0,5],[0,6],[0,7],[0,8],[0,9],[0,10],[0,11],[1,11],[2,11],[3,11],[4,11],[5,11],[5,10],[4,10],[4,9],[3,9],[3,10],[2,10],[1,10],[1,9],[2,9],[2,8],[1,8],[1,7],[1,6],[2,6],[2,5],[2,4],[3,4],[3,3],[2,3],[2,2],[3,2],[3,1],[4,1],[4,2],[5,2],[5,3],[4,3],[4,4],[4,5],[3,5],[3,6],[4,6],[5,6],[6,6],[6,5],[5,5],[5,4],[6,4],[6,3],[6,2],[7,2],[7,3],[7,4],[7,5],[8,5],[8,4],[8,3],[9,3],[9,4],[9,5],[10,5],[10,4],[10,3],[10,2],[10,1],[10,0],[11,0],[11,1],[11,2],[11,3],[11,4],[11,5],[11,6],[10,6],[10,7],[11,7],[11,8],[11,9],[11,10],[11,11],[10,11],[9,11],[9,10],[10,10],[10,9],[10,8],[9,8],[9,9],[8,9],[8,8],[8,7],[9,7],[9,6],[8,6],[7,6],[7,7],[7,8],[7,9],[7,10],[8,10],[8,11],[7,11],[6,11],[6,10],[6,9],[5,9],[5,8],[6,8],[6,7],[5,7],[4,7],[4,8],[3,8],[3,7],[2,7]],[[11,11],[11,10],[11,9],[11,8],[11,7],[11,6],[11,5],[10,5],[10,6],[10,7],[10,8],[10,9],[9,9],[9,8],[9,7],[9,6],[9,5],[8,5],[7,5],[7,6],[8,6],[8,7],[7,7],[7,8],[8,8],[8,9],[8,10],[9,10],[10,10],[10,11],[9,11],[8,11],[7,11],[7,10],[7,9],[6,9],[6,10],[6,11],[5,11],[5,10],[5,9],[5,8],[6,8],[6,7],[5,7],[5,6],[6,6],[6,5],[6,4],[7,4],[8,4],[9,4],[9,3],[10,3],[10,4],[11,4],[11,3],[11,2],[11,1],[11,0],[10,0],[9,0],[8,0],[8,1],[9,1],[10,1],[10,2],[9,2],[8,2],[8,3],[7,3],[7,2],[6,2],[6,3],[5,3],[5,2],[4,2],[3,2],[3,1],[4,1],[5,1],[6,1],[7,1],[7,0],[6,0],[5,0],[4,0],[3,0],[2,0],[1,0],[0,0],[0,1],[0,2],[1,2],[1,1],[2,1],[2,2],[2,3],[3,3],[4,3],[4,4],[5,4],[5,5],[4,5],[4,6],[4,7],[4,8],[4,9],[3,9],[2,9],[2,10],[3,10],[4,10],[4,11],[3,11],[2,11],[1,11],[0,11],[0,10],[1,10],[1,9],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[0,3],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[2,8],[3,8],[3,7],[2,7],[2,6],[2,5],[2,4],[3,4],[3,5],[3,6]],[[2,2],[3,2],[3,3],[4,3],[4,2],[5,2],[5,3],[6,3],[6,2],[7,2],[7,3],[8,3],[8,2],[9,2],[9,3],[10,3],[10,4],[10,5],[9,5],[9,4],[8,4],[7,4],[6,4],[5,4],[4,4],[3,4],[3,5],[4,5],[5,5],[5,6],[4,6],[4,7],[4,8],[4,9],[4,10],[3,10],[3,11],[4,11],[5,11],[6,11],[6,10],[5,10],[5,9],[5,8],[5,7],[6,7],[7,7],[7,6],[6,6],[6,5],[7,5],[8,5],[8,6],[8,7],[8,8],[7,8],[6,8],[6,9],[7,9],[7,10],[7,11],[8,11],[8,10],[8,9],[9,9],[9,10],[9,11],[10,11],[11,11],[11,10],[10,10],[10,9],[11,9],[11,8],[11,7],[10,7],[10,8],[9,8],[9,7],[9,6],[10,6],[11,6],[11,5],[11,4],[11,3],[11,2],[10,2],[10,1],[11,1],[11,0],[10,0],[9,0],[9,1],[8,1],[8,0],[7,0],[7,1],[6,1],[6,0],[5,0],[5,1],[4,1],[4,0],[3,0],[3,1],[2,1],[2,0],[1,0],[0,0],[0,1],[1,1],[1,2],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[1,7],[2,7],[2,8],[1,8],[0,8],[0,9],[1,9],[1,10],[0,10],[0,11],[1,11],[2,11],[2,10],[2,9],[3,9],[3,8],[3,7],[3,6],[2,6],[1,6],[1,5],[1,4],[1,3],[2,3],[2,4],[2,5]],[[2,0],[1,0],[0,0],[0,1],[0,2],[0,3],[0,4],[1,4],[1,3],[1,2],[1,1],[2,1],[3,1],[3,0],[4,0],[4,1],[4,2],[3,2],[2,2],[2,3],[3,3],[3,4],[2,4],[2,5],[3,5],[4,5],[4,6],[5,6],[6,6],[6,7],[7,7],[7,6],[7,5],[6,5],[5,5],[5,4],[4,4],[4,3],[5,3],[5,2],[5,1],[5,0],[6,0],[7,0],[8,0],[8,1],[8,2],[8,3],[7,3],[7,2],[7,1],[6,1],[6,2],[6,3],[6,4],[7,4],[8,4],[9,4],[10,4],[10,5],[9,5],[8,5],[8,6],[9,6],[10,6],[10,7],[9,7],[8,7],[8,8],[7,8],[6,8],[5,8],[5,7],[4,7],[3,7],[3,6],[2,6],[2,7],[2,8],[1,8],[1,7],[1,6],[1,5],[0,5],[0,6],[0,7],[0,8],[0,9],[1,9],[2,9],[3,9],[3,8],[4,8],[4,9],[4,10],[3,10],[2,10],[1,10],[0,10],[0,11],[1,11],[2,11],[3,11],[4,11],[5,11],[6,11],[6,10],[5,10],[5,9],[6,9],[7,9],[8,9],[9,9],[9,8],[10,8],[10,9],[10,10],[9,10],[8,10],[7,10],[7,11],[8,11],[9,11],[10,11],[11,11],[11,10],[11,9],[11,8],[11,7],[11,6],[11,5],[11,4],[11,3],[10,3],[9,3],[9,2],[10,2],[11,2],[11,1],[11,0],[10,0],[10,1],[9,1],[9,0]],[[4,2],[4,1],[4,0],[3,0],[2,0],[2,1],[3,1],[3,2],[2,2],[1,2],[1,1],[1,0],[0,0],[0,1],[0,2],[0,3],[0,4],[1,4],[1,3],[2,3],[2,4],[3,4],[3,3],[4,3],[4,4],[5,4],[6,4],[7,4],[7,5],[8,5],[8,4],[8,3],[7,3],[7,2],[7,1],[6,1],[6,2],[6,3],[5,3],[5,2],[5,1],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[11,0],[11,1],[11,2],[10,2],[10,1],[9,1],[8,1],[8,2],[9,2],[9,3],[10,3],[11,3],[11,4],[10,4],[9,4],[9,5],[10,5],[11,5],[11,6],[10,6],[9,6],[8,6],[7,6],[7,7],[6,7],[5,7],[5,6],[6,6],[6,5],[5,5],[4,5],[4,6],[4,7],[4,8],[5,8],[5,9],[4,9],[4,10],[5,10],[6,10],[6,9],[6,8],[7,8],[8,8],[8,7],[9,7],[9,8],[10,8],[10,7],[11,7],[11,8],[11,9],[10,9],[9,9],[8,9],[7,9],[7,10],[8,10],[9,10],[10,10],[11,10],[11,11],[10,11],[9,11],[8,11],[7,11],[6,11],[5,11],[4,11],[3,11],[2,11],[2,10],[3,10],[3,9],[2,9],[1,9],[1,8],[2,8],[3,8],[3,7],[2,7],[2,6],[3,6],[3,5],[2,5],[1,5],[0,5],[0,6],[1,6],[1,7],[0,7],[0,8],[0,9],[0,10],[0,11],[1,11],[1,10]],[[1,7],[1,8],[2,8],[2,7],[3,7],[3,8],[3,9],[4,9],[4,8],[4,7],[5,7],[5,6],[4,6],[3,6],[2,6],[2,5],[3,5],[4,5],[4,4],[3,4],[2,4],[1,4],[1,3],[1,2],[1,1],[2,1],[2,2],[2,3],[3,3],[3,2],[3,1],[3,0],[2,0],[1,0],[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[1,5],[1,6],[0,6],[0,7],[0,8],[0,9],[0,10],[0,11],[1,11],[1,10],[1,9],[2,9],[2,10],[2,11],[3,11],[3,10],[4,10],[4,11],[5,11],[5,10],[5,9],[5,8],[6,8],[6,9],[6,10],[6,11],[7,11],[7,10],[7,9],[8,9],[8,10],[8,11],[9,11],[9,10],[9,9],[10,9],[10,10],[10,11],[11,11],[11,10],[11,9],[11,8],[11,7],[11,6],[10,6],[10,7],[10,8],[9,8],[8,8],[7,8],[7,7],[6,7],[6,6],[7,6],[8,6],[8,7],[9,7],[9,6],[9,5],[10,5],[11,5],[11,4],[10,4],[9,4],[9,3],[8,3],[7,3],[7,2],[8,2],[9,2],[9,1],[10,1],[10,2],[10,3],[11,3],[11,2],[11,1],[11,0],[10,0],[9,0],[8,0],[8,1],[7,1],[7,0],[6,0],[5,0],[4,0],[4,1],[4,2],[4,3],[5,3],[5,2],[5,1],[6,1],[6,2],[6,3],[6,4],[5,4],[5,5],[6,5],[7,5],[7,4],[8,4],[8,5]],[[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[2,8],[2,9],[3,9],[3,8],[4,8],[4,9],[5,9],[5,10],[6,10],[6,9],[6,8],[5,8],[5,7],[4,7],[3,7],[2,7],[1,7],[1,6],[0,6],[0,7],[0,8],[0,9],[0,10],[0,11],[1,11],[2,11],[3,11],[4,11],[5,11],[6,11],[7,11],[8,11],[8,10],[7,10],[7,9],[7,8],[8,8],[8,9],[9,9],[10,9],[10,10],[9,10],[9,11],[10,11],[11,11],[11,10],[11,9],[11,8],[11,7],[10,7],[10,8],[9,8],[9,7],[8,7],[7,7],[6,7],[6,6],[5,6],[4,6],[3,6],[2,6],[2,5],[3,5],[4,5],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[1,3],[1,4],[1,5],[0,5],[0,4],[0,3],[0,2],[1,2],[1,1],[0,1],[0,0],[1,0],[2,0],[2,1],[2,2],[3,2],[3,3],[4,3],[4,2],[4,1],[3,1],[3,0],[4,0],[5,0],[5,1],[6,1],[6,0],[7,0],[8,0],[9,0],[10,0],[11,0],[11,1],[11,2],[11,3],[11,4],[11,5],[11,6],[10,6],[10,5],[10,4],[10,3],[10,2],[10,1],[9,1],[8,1],[7,1],[7,2],[6,2],[5,2],[5,3],[6,3],[7,3],[8,3],[8,2],[9,2],[9,3],[9,4],[9,5],[9,6],[8,6],[7,6],[7,5],[6,5],[6,4],[7,4],[8,4],[8,5]],[[4,0],[5,0],[5,1],[5,2],[5,3],[4,3],[3,3],[3,4],[4,4],[5,4],[5,5],[4,5],[4,6],[5,6],[6,6],[6,7],[7,7],[7,6],[8,6],[8,5],[7,5],[6,5],[6,4],[7,4],[8,4],[8,3],[8,2],[8,1],[7,1],[7,2],[7,3],[6,3],[6,2],[6,1],[6,0],[7,0],[8,0],[9,0],[10,0],[11,0],[11,1],[10,1],[9,1],[9,2],[10,2],[11,2],[11,3],[10,3],[9,3],[9,4],[9,5],[9,6],[9,7],[8,7],[8,8],[9,8],[9,9],[8,9],[7,9],[7,8],[6,8],[6,9],[6,10],[7,10],[8,10],[9,10],[10,10],[10,9],[10,8],[10,7],[10,6],[10,5],[10,4],[11,4],[11,5],[11,6],[11,7],[11,8],[11,9],[11,10],[11,11],[10,11],[9,11],[8,11],[7,11],[6,11],[5,11],[5,10],[5,9],[5,8],[5,7],[4,7],[3,7],[3,8],[4,8],[4,9],[3,9],[3,10],[4,10],[4,11],[3,11],[2,11],[2,10],[2,9],[1,9],[1,10],[1,11],[0,11],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[1,5],[1,6],[1,7],[1,8],[2,8],[2,7],[2,6],[3,6],[3,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,2],[1,2],[1,1],[0,1],[0,0],[1,0],[2,0],[3,0],[3,1],[2,1],[2,2],[3,2],[4,2],[4,1]],[[10,10],[9,10],[8,10],[7,10],[7,11],[8,11],[9,11],[10,11],[11,11],[11,10],[11,9],[11,8],[11,7],[11,6],[11,5],[11,4],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[9,9],[9,8],[8,8],[8,9],[7,9],[6,9],[6,10],[6,11],[5,11],[4,11],[4,10],[5,10],[5,9],[4,9],[3,9],[3,10],[3,11],[2,11],[2,10],[1,10],[1,11],[0,11],[0,10],[0,9],[0,8],[1,8],[1,9],[2,9],[2,8],[3,8],[3,7],[3,6],[4,6],[4,7],[4,8],[5,8],[6,8],[7,8],[7,7],[8,7],[9,7],[9,6],[8,6],[8,5],[9,5],[9,4],[8,4],[7,4],[7,5],[7,6],[6,6],[6,7],[5,7],[5,6],[5,5],[6,5],[6,4],[5,4],[5,3],[4,3],[3,3],[3,4],[4,4],[4,5],[3,5],[2,5],[1,5],[1,6],[2,6],[2,7],[1,7],[0,7],[0,6],[0,5],[0,4],[0,3],[0,2],[0,1],[0,0],[1,0],[2,0],[2,1],[1,1],[1,2],[1,3],[1,4],[2,4],[2,3],[2,2],[3,2],[3,1],[3,0],[4,0],[4,1],[4,2],[5,2],[5,1],[6,1],[7,1],[8,1],[8,2],[7,2],[6,2],[6,3],[7,3],[8,3],[9,3],[9,2],[9,1],[10,1],[10,2],[10,3],[11,3],[11,2],[11,1],[11,0],[10,0],[9,0],[8,0],[7,0],[6,0],[5,0]]],init();