/**
 * @author: Kapil Kashyap
 * This is a WIP and will be configuration driven in later versions
 */
const init=()=>{let t=(t,e,o,n)=>{document.querySelector(t).addEventListener(e,()=>{document.dispatchEvent(new KeyboardEvent(o,n))},!0)};t(".direction-buttons .row .top .shape","click","keydown",{code:"ArrowUp"}),t(".direction-buttons .row .right .shape","click","keydown",{code:"ArrowRight"}),t(".direction-buttons .row .down .shape","click","keydown",{code:"ArrowDown"}),t(".direction-buttons .row .left .shape","click","keydown",{code:"ArrowLeft"}),t(".action-buttons .row .top .button","click","keydown",{ctrlKey:!0,code:"ArrowUp"}),t(".action-buttons .row .right .button","click","keydown",{ctrlKey:!0,code:"ArrowRight"}),t(".action-buttons .row .down .button","click","keydown",{ctrlKey:!0,code:"ArrowDown"}),t(".action-buttons .row .left .button","click","keydown",{ctrlKey:!0,code:"ArrowLeft"})};(()=>{let t=new Promise(t=>{let e=new XMLHttpRequest;e.onreadystatechange=()=>{4===e.readyState&&200===e.status&&t(e.responseText)},e.open("GET","gamepad/direction-buttons.html",!0),e.send()}),e=new Promise(t=>{let e=new XMLHttpRequest;e.onreadystatechange=()=>{4===e.readyState&&200===e.status&&t(e.responseText)},e.open("GET","gamepad/action-buttons.html",!0),e.send()});Promise.all([t,e]).then(t=>{document.querySelector(".gamepad").innerHTML=t.join(""),init()})})();